// Mocks generated by Mockito 5.4.4 from annotations
// in face_detector/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;
import 'dart:typed_data' as _i18;
import 'dart:ui' as _i21;

import 'package:camera/camera.dart' as _i12;
import 'package:dio/dio.dart' as _i13;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i15;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:face_detector/providers/settings_provider.dart' as _i20;
import 'package:face_detector/services/api_service.dart' as _i9;
import 'package:face_detector/services/camera_service/camera_service.dart'
    as _i23;
import 'package:face_detector/services/database_service.dart' as _i16;
import 'package:face_detector/services/event_bus.dart' as _i22;
import 'package:face_detector/services/storage_service.dart' as _i8;
import 'package:flutter/foundation.dart' as _i11;
import 'package:flutter/material.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:sembast/sembast_io.dart' as _i19;
import 'package:shared_preferences/shared_preferences.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_5 extends _i1.SmartFake
    implements _i7.SharedPreferences {
  _FakeSharedPreferences_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStorageService_6 extends _i1.SmartFake
    implements _i8.StorageService {
  _FakeStorageService_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_7<T> extends _i1.SmartFake
    implements _i9.ApiResponse<T> {
  _FakeApiResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_8 extends _i1.SmartFake implements _i10.ThemeData {
  _FakeThemeData_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i11.DiagnosticLevel? minLevel = _i11.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeCameraDescription_9 extends _i1.SmartFake
    implements _i12.CameraDescription {
  _FakeCameraDescription_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i13.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i15.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i14.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<dynamic>>);

  @override
  _i14.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i15.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i14.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<dynamic>>);

  @override
  _i14.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i15.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i15.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i7.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i14.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i16.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get dbName => (super.noSuchMethod(
        Invocation.getter(#dbName),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#dbName),
        ),
      ) as String);

  @override
  _i14.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<String?> getItemByKey(
    String? storeName,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItemByKey,
          [
            storeName,
            key,
          ],
        ),
        returnValue: _i14.Future<String?>.value(),
      ) as _i14.Future<String?>);

  @override
  _i14.Future<void> updateItem(
    String? storeName,
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateItem,
          [
            storeName,
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> deleteItem(
    String? storeName,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [
            storeName,
            key,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<List<Map<String, dynamic>>> getItems(String? storeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [storeName],
        ),
        returnValue: _i14.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i14.Future<List<Map<String, dynamic>>>);

  @override
  _i14.Future<void> clearStore(String? storeName) => (super.noSuchMethod(
        Invocation.method(
          #clearStore,
          [storeName],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i8.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.SharedPreferences get sharedPref => (super.noSuchMethod(
        Invocation.getter(#sharedPref),
        returnValue: _FakeSharedPreferences_5(
          this,
          Invocation.getter(#sharedPref),
        ),
      ) as _i7.SharedPreferences);

  @override
  set sharedPref(_i7.SharedPreferences? _sharedPref) => super.noSuchMethod(
        Invocation.setter(
          #sharedPref,
          _sharedPref,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<_i8.StorageService> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue:
            _i14.Future<_i8.StorageService>.value(_FakeStorageService_6(
          this,
          Invocation.method(
            #init,
            [],
          ),
        )),
      ) as _i14.Future<_i8.StorageService>);

  @override
  _i14.Future<void> demo() => (super.noSuchMethod(
        Invocation.method(
          #demo,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  String getPin() => (super.noSuchMethod(
        Invocation.method(
          #getPin,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getPin,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setPin(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #setPin,
          [pin],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getApiKey() => (super.noSuchMethod(
        Invocation.method(
          #getApiKey,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getApiKey,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setApiKey(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #setApiKey,
          [apiKey],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getMasterPassword() => (super.noSuchMethod(
        Invocation.method(
          #getMasterPassword,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getMasterPassword,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setMasterPassword(String? password) => (super.noSuchMethod(
        Invocation.method(
          #setMasterPassword,
          [password],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getBaseUrl() => (super.noSuchMethod(
        Invocation.method(
          #getBaseUrl,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getBaseUrl,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setBaseUrl(String? baseUrl) => (super.noSuchMethod(
        Invocation.method(
          #setBaseUrl,
          [baseUrl],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  double getSimilarity() => (super.noSuchMethod(
        Invocation.method(
          #getSimilarity,
          [],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  _i14.Future<bool> setSimilarity(double? similarity) => (super.noSuchMethod(
        Invocation.method(
          #setSimilarity,
          [similarity],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  bool getShowFacesInRecognize() => (super.noSuchMethod(
        Invocation.method(
          #getShowFacesInRecognize,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<bool> setShowFacesInRecognize(bool? fastRecognize) =>
      (super.noSuchMethod(
        Invocation.method(
          #setShowFacesInRecognize,
          [fastRecognize],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getExtApiURL() => (super.noSuchMethod(
        Invocation.method(
          #getExtApiURL,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getExtApiURL,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setExtApiURL(String? extApiURL) => (super.noSuchMethod(
        Invocation.method(
          #setExtApiURL,
          [extApiURL],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getExtApiMethod() => (super.noSuchMethod(
        Invocation.method(
          #getExtApiMethod,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getExtApiMethod,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setExtApiMethod(String? extApiMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExtApiMethod,
          [extApiMethod],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getTheme() => (super.noSuchMethod(
        Invocation.method(
          #getTheme,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getTheme,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setTheme(String? theme) => (super.noSuchMethod(
        Invocation.method(
          #setTheme,
          [theme],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getExtApiHeaders() => (super.noSuchMethod(
        Invocation.method(
          #getExtApiHeaders,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getExtApiHeaders,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setExtApiHeaders(String? extApiHeaders) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExtApiHeaders,
          [extApiHeaders],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  String getExtApiBody() => (super.noSuchMethod(
        Invocation.method(
          #getExtApiBody,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getExtApiBody,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<bool> setExtApiBody(String? extApiBody) => (super.noSuchMethod(
        Invocation.method(
          #setExtApiBody,
          [extApiBody],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  int getCameraIndex() => (super.noSuchMethod(
        Invocation.method(
          #getCameraIndex,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i14.Future<bool> setCameraIndex(int? cameraIdx) => (super.noSuchMethod(
        Invocation.method(
          #setCameraIndex,
          [cameraIdx],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  int getCameraOrientation() => (super.noSuchMethod(
        Invocation.method(
          #getCameraOrientation,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i14.Future<bool> setCameraOrientation(int? orientation) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraOrientation,
          [orientation],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  bool getLockOrientation() => (super.noSuchMethod(
        Invocation.method(
          #getLockOrientation,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<bool> setLockOrientation(bool? lock) => (super.noSuchMethod(
        Invocation.method(
          #setLockOrientation,
          [lock],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  bool getAutodetectFace() => (super.noSuchMethod(
        Invocation.method(
          #getAutodetectFace,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<bool> setAutodetectFace(bool? autodetect) => (super.noSuchMethod(
        Invocation.method(
          #setAutodetectFace,
          [autodetect],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  bool getFullScreen() => (super.noSuchMethod(
        Invocation.method(
          #getFullScreen,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<bool> setFullScreen(bool? fullScreen) => (super.noSuchMethod(
        Invocation.method(
          #setFullScreen,
          [fullScreen],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i9.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void updateBaseUrl(String? url) => super.noSuchMethod(
        Invocation.method(
          #updateBaseUrl,
          [url],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> getSubjects() => (super.noSuchMethod(
        Invocation.method(
          #getSubjects,
          [],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #getSubjects,
            [],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> addFace(
    String? name,
    _i18.Uint8List? fileBytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFace,
          [
            name,
            fileBytes,
          ],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #addFace,
            [
              name,
              fileBytes,
            ],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> recognizeFilePath(String? filePath) =>
      (super.noSuchMethod(
        Invocation.method(
          #recognizeFilePath,
          [filePath],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #recognizeFilePath,
            [filePath],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> recognize(_i18.Uint8List? fileBytes) =>
      (super.noSuchMethod(
        Invocation.method(
          #recognize,
          [fileBytes],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #recognize,
            [fileBytes],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> addSubject(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSubject,
          [name],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #addSubject,
            [name],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> deleteSubject(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSubject,
          [name],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #deleteSubject,
            [name],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  _i14.Future<_i9.ApiResponse<dynamic>> callExternalApi() =>
      (super.noSuchMethod(
        Invocation.method(
          #callExternalApi,
          [],
        ),
        returnValue: _i14.Future<_i9.ApiResponse<dynamic>>.value(
            _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #callExternalApi,
            [],
          ),
        )),
      ) as _i14.Future<_i9.ApiResponse<dynamic>>);

  @override
  void cancelOngoingRequests() => super.noSuchMethod(
        Invocation.method(
          #cancelOngoingRequests,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.ApiResponse<dynamic> parseDioError(_i13.DioException? error) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseDioError,
          [error],
        ),
        returnValue: _FakeApiResponse_7<dynamic>(
          this,
          Invocation.method(
            #parseDioError,
            [error],
          ),
        ),
      ) as _i9.ApiResponse<dynamic>);
}

/// A class which mocks [DatabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseClient extends _i1.Mock implements _i19.DatabaseClient {
  MockDatabaseClient() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [SettingsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsProvider extends _i1.Mock implements _i20.SettingsProvider {
  MockSettingsProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get themeName => (super.noSuchMethod(
        Invocation.getter(#themeName),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#themeName),
        ),
      ) as String);

  @override
  bool get showFacesOnRecognize => (super.noSuchMethod(
        Invocation.getter(#showFacesOnRecognize),
        returnValue: false,
      ) as bool);

  @override
  int get cameraOrientation => (super.noSuchMethod(
        Invocation.getter(#cameraOrientation),
        returnValue: 0,
      ) as int);

  @override
  bool get autodetectFace => (super.noSuchMethod(
        Invocation.getter(#autodetectFace),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setThemeName(String? newTheme) => super.noSuchMethod(
        Invocation.method(
          #setThemeName,
          [newTheme],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getThemeName() => (super.noSuchMethod(
        Invocation.method(
          #getThemeName,
          [],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #getThemeName,
            [],
          ),
        ),
      ) as String);

  @override
  bool getShowFacesOnRecognize() => (super.noSuchMethod(
        Invocation.method(
          #getShowFacesOnRecognize,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setAutodetectFace(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setAutodetectFace,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool getAutodetectFace() => (super.noSuchMethod(
        Invocation.method(
          #getAutodetectFace,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setCameraOrientation(int? orientation) => super.noSuchMethod(
        Invocation.method(
          #setCameraOrientation,
          [orientation],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getCameraOrientation() => (super.noSuchMethod(
        Invocation.method(
          #getCameraOrientation,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i10.ThemeData getTheme(_i10.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #getTheme,
          [context],
        ),
        returnValue: _FakeThemeData_8(
          this,
          Invocation.method(
            #getTheme,
            [context],
          ),
        ),
      ) as _i10.ThemeData);

  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventBus].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventBus extends _i1.Mock implements _i22.EventBus {
  MockEventBus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Stream<_i22.EventBusEvent> on() => (super.noSuchMethod(
        Invocation.method(
          #on,
          [],
        ),
        returnValue: _i14.Stream<_i22.EventBusEvent>.empty(),
      ) as _i14.Stream<_i22.EventBusEvent>);

  @override
  void fire(_i22.EventBusEvent? event) => super.noSuchMethod(
        Invocation.method(
          #fire,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CameraService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraService extends _i1.Mock implements _i23.CameraService {
  MockCameraService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<void> setupCameraController() => (super.noSuchMethod(
        Invocation.method(
          #setupCameraController,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i12.CameraDescription getCameraDevice() => (super.noSuchMethod(
        Invocation.method(
          #getCameraDevice,
          [],
        ),
        returnValue: _FakeCameraDescription_9(
          this,
          Invocation.method(
            #getCameraDevice,
            [],
          ),
        ),
      ) as _i12.CameraDescription);

  @override
  _i14.Future<_i12.XFile?> takePicture() => (super.noSuchMethod(
        Invocation.method(
          #takePicture,
          [],
        ),
        returnValue: _i14.Future<_i12.XFile?>.value(),
      ) as _i14.Future<_i12.XFile?>);

  @override
  _i14.Future<int> getCameraCount() => (super.noSuchMethod(
        Invocation.method(
          #getCameraCount,
          [],
        ),
        returnValue: _i14.Future<int>.value(0),
      ) as _i14.Future<int>);

  @override
  _i14.Future<void> changeCamera() => (super.noSuchMethod(
        Invocation.method(
          #changeCamera,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  int getCameraOrientation() => (super.noSuchMethod(
        Invocation.method(
          #getCameraOrientation,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  _i14.Future<void> setCameraOrientation(int? orientation) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraOrientation,
          [orientation],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> changeOrientation() => (super.noSuchMethod(
        Invocation.method(
          #changeOrientation,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  bool isCameraLocked() => (super.noSuchMethod(
        Invocation.method(
          #isCameraLocked,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<void> setCameraLocked(bool? lock) => (super.noSuchMethod(
        Invocation.method(
          #setCameraLocked,
          [lock],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  bool hasFeature(_i23.CameraFeature? feature) => (super.noSuchMethod(
        Invocation.method(
          #hasFeature,
          [feature],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isChangingCameraLens() => (super.noSuchMethod(
        Invocation.method(
          #isChangingCameraLens,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<void> startCameraStream(dynamic Function(dynamic)? onImage) =>
      (super.noSuchMethod(
        Invocation.method(
          #startCameraStream,
          [onImage],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> stopCameraStream() => (super.noSuchMethod(
        Invocation.method(
          #stopCameraStream,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> startCameraStreamSafe(dynamic Function(dynamic)? onImage) =>
      (super.noSuchMethod(
        Invocation.method(
          #startCameraStreamSafe,
          [onImage],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  bool isStreaming() => (super.noSuchMethod(
        Invocation.method(
          #isStreaming,
          [],
        ),
        returnValue: false,
      ) as bool);
}
